.list-group-item-avatar
  img.img-rounded alt="avatar" src=comment.user.avatar.normal.url
.list-group-item-content
  .list-group-item-heading
    a.comment-user href=user_link(comment.user)
      b = comment.user.name
      '
      = "@#{comment.user.username}"
      = ' · '
      a href=comment_link(comment)
        = time_ago_tag comment.created_at
  = form_for comment, remote: true, html: { class: "new_comment small-textarea" } do |f|
    .form-group
      = f.text_area :body, id: "edit_comment_body"
    = f.submit t('.save_changes'), class: 'btn btn-success', 'data-disable-with' => t('.save_changes')
    '
    a.btn.btn-default href=cancel_comment_path(comment) data-remote="true"
      = t '.cancel'

javascript:
  var textarea = $("#comment-#{params[:id]} #edit_comment_body");
  var editor = new Simditor({
    textarea: textarea,
    toolbar: window.campo.toolbar,
    upload: {
      'url': '/attachments',
      'params': null,
      'fileKey': 'upload_file',
      'connectionCount': 3,
      'leaveConfirm': '正在上传文件，如果离开上传会自动取消'
    }
  });

  $("body").delegate("#comment-#{params[:id]}", "submit", function(){
    var comment_body  = $.trim( $("#comment-#{params[:id]} #edit_comment_body").val() )  == "";

    if(comment_body){
      var _comment = $("#comment-#{params[:id]}");
      var _body = _comment.find(".simditor");
      var _parent = _body.parent(".form-group");
      _body.after("<span class=\"help-block\">不能为空字符</span>");
      _parent.addClass("has-error");

      setTimeout(function(){
        _parent.removeClass("has-error");
        _parent.find(".help-block").remove();
      }, 1300);

      return false;
    }
  });
